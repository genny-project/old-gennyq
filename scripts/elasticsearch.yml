# Launch Elasticsearch
version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - thread_pool.bulk.queue_size=2000
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - mainproxy 

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.10.1
    container_name: logstash 
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    ports:
      - "12201:12201/udp"
      - "5000:5000"
      - "9600:9600"
    networks:
      - mainproxy 
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.1
    environment:
      - VIRTUAL_HOST=kibana.genny.life
      - VIRTUAL_PORT=5601
      - VIRTUAL_PROTO=http
      - CERT_NAME=genny.life
    container_name:  kibana 
#    volumes:
#      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - mainproxy 
    depends_on: 
      - elasticsearch

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  mainproxy:
    driver: bridge
